# Generated by Django 2.1.3 on 2018-12-14 18:21

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=256, unique=True)),
                ('date_login', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=2000)),
                ('start_date', models.DateTimeField(default=datetime.datetime(2018, 12, 14, 21, 21, 6, 526573))),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255)),
                ('department_name', models.CharField(max_length=255)),
                ('course_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(6), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=200)),
                ('start', models.DateTimeField(blank=True)),
                ('end', models.DateTimeField(blank=True)),
                ('description', models.TextField(max_length=2000)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.Course')),
            ],
        ),
        migrations.CreateModel(
            name='TaskSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution', models.TextField(max_length=2000)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.Task')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FIO', models.CharField(max_length=255)),
                ('e_mail', models.EmailField(blank=True, max_length=254)),
                ('password', models.CharField(blank=True, max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=11)),
                ('hometown', models.CharField(blank=True, max_length=255)),
                ('person_info', models.TextField(blank=True, max_length=2000)),
                ('vk_link', models.URLField(blank=True)),
                ('facebook_link', models.URLField(blank=True)),
                ('linkedin_link', models.URLField(blank=True)),
                ('instagram_link', models.URLField(blank=True)),
                ('verification_code', models.CharField(default=uuid.uuid1, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms_app.User')),
                ('admission_year', models.DateTimeField(default=datetime.datetime.now)),
                ('degree', models.CharField(choices=[('BC', 'Bachelor'), ('MR', 'Master'), ('PG', 'Postgraduate')], max_length=2)),
                ('form_of_study', models.CharField(choices=[('FT', 'Full-time'), ('EM', 'Extramural'), ('EG', 'Evening')], max_length=2)),
                ('learning_base', models.CharField(choices=[('CT', 'Contract'), ('BG', 'Budget')], max_length=2)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.Group')),
            ],
            options={
                'ordering': [],
            },
            bases=('lms_app.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lms_app.User')),
            ],
            options={
                'ordering': [],
            },
            bases=('lms_app.user',),
        ),
        migrations.AddField(
            model_name='tasksolution',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.User'),
        ),
        migrations.AddField(
            model_name='course',
            name='groups_of_course',
            field=models.ManyToManyField(blank=True, to='lms_app.Group'),
        ),
        migrations.AddField(
            model_name='accesstoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms_app.User'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_instructors',
            field=models.ManyToManyField(blank=True, related_name='instructors', to='lms_app.Teacher'),
        ),
        migrations.AddField(
            model_name='course',
            name='trusted_individuals',
            field=models.ManyToManyField(blank=True, related_name='trusted_individuals', to='lms_app.Student'),
        ),
    ]
